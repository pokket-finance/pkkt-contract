/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Utils, UtilsInterface } from "../Utils";

const _abi = [
  {
    inputs: [],
    name: "RATIOMULTIPLIER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROUND_PRICE_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101ba61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c806376e7a47814610045578063cba7ca121461005f575b600080fd5b61004d610067565b60405190815260200160405180910390f35b61004d600a81565b610072600a806100b8565b81565b600181815b808511156100b05781600019048211156100965761009661016e565b808516156100a357918102915b93841c939080029061007a565b509250929050565b60006100c483836100cb565b9392505050565b6000826100da57506001610168565b816100e757506000610168565b81600181146100fd576002811461010757610123565b6001915050610168565b60ff8411156101185761011861016e565b50506001821b610168565b5060208310610133831016604e8410600b8410161715610146575081810a610168565b6101508383610075565b80600019048211156101645761016461016e565b0290505b92915050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220ed274c6d80cb722f93278a7fbd0f2069cdff9b4ab5ff47eba0686698837dfd0f64736f6c63430008040033";

export class Utils__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Utils> {
    return super.deploy(overrides || {}) as Promise<Utils>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Utils {
    return super.attach(address) as Utils;
  }
  connect(signer: Signer): Utils__factory {
    return super.connect(signer) as Utils__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UtilsInterface {
    return new utils.Interface(_abi) as UtilsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Utils {
    return new Contract(address, _abi, signerOrProvider) as Utils;
  }
}
