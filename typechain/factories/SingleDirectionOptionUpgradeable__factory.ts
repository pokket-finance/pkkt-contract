/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SingleDirectionOptionUpgradeable,
  SingleDirectionOptionUpgradeableInterface,
} from "../SingleDirectionOptionUpgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_whitelistAddresses",
        type: "address[]",
      },
    ],
    name: "addToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "vaultId",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "assetAmountDecimals",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlying",
            type: "address",
          },
          {
            internalType: "bool",
            name: "callOrPut",
            type: "bool",
          },
        ],
        internalType: "struct StructureData.VaultDefinition[]",
        name: "_vaultDefinitions",
        type: "tuple[]",
      },
    ],
    name: "addVaults",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8[]",
        name: "_vaultIds",
        type: "uint8[]",
      },
    ],
    name: "buyOptions",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_vaultId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_redeemAmount",
        type: "uint256",
      },
    ],
    name: "cancelWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collectOptionHolderValues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_vaultId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_vaultId",
        type: "uint8",
      },
    ],
    name: "depositETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "expiryLevel",
            type: "uint128",
          },
          {
            internalType: "uint8",
            name: "vaultId",
            type: "uint8",
          },
        ],
        internalType: "struct StructureData.ExpiredOptionParameters[]",
        name: "_expiryParameters",
        type: "tuple[]",
      },
    ],
    name: "expireOptions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_vaultId",
        type: "uint8",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "pending",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "redeemed",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "expiredAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "expiredQueuedRedeemAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "onGoingAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "onGoingQueuedRedeemAmount",
            type: "uint128",
          },
          {
            internalType: "uint16",
            name: "lastUpdateRound",
            type: "uint16",
          },
        ],
        internalType: "struct StructureData.UserState",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_vaultId",
        type: "uint8",
      },
    ],
    name: "getVaultState",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "totalPending",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "totalRedeemed",
            type: "uint128",
          },
          {
            internalType: "uint32",
            name: "cutOffAt",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "currentRound",
            type: "uint16",
          },
          {
            internalType: "uint128",
            name: "maxCapacity",
            type: "uint128",
          },
          {
            components: [
              {
                internalType: "uint128",
                name: "amount",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "queuedRedeemAmount",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "strike",
                type: "uint128",
              },
              {
                internalType: "uint16",
                name: "premiumRate",
                type: "uint16",
              },
              {
                internalType: "address",
                name: "buyerAddress",
                type: "address",
              },
            ],
            internalType: "struct StructureData.OptionState",
            name: "onGoing",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint128",
                name: "amount",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "queuedRedeemAmount",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "strike",
                type: "uint128",
              },
              {
                internalType: "uint16",
                name: "premiumRate",
                type: "uint16",
              },
              {
                internalType: "address",
                name: "buyerAddress",
                type: "address",
              },
            ],
            internalType: "struct StructureData.OptionState",
            name: "expired",
            type: "tuple",
          },
        ],
        internalType: "struct StructureData.VaultSnapShot",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_manager",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "vaultId",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "assetAmountDecimals",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlying",
            type: "address",
          },
          {
            internalType: "bool",
            name: "callOrPut",
            type: "bool",
          },
        ],
        internalType: "struct StructureData.VaultDefinition[]",
        name: "_vaultDefinitions",
        type: "tuple[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_vaultId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_redeemAmount",
        type: "uint256",
      },
    ],
    name: "initiateWithraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "vaultId",
            type: "uint8",
          },
          {
            internalType: "uint128",
            name: "maxCapacity",
            type: "uint128",
          },
        ],
        internalType: "struct StructureData.KickOffOptionParameters[]",
        name: "_kickoffs",
        type: "tuple[]",
      },
    ],
    name: "kickOffOptions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "managerRoleAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_delistAddresses",
        type: "address[]",
      },
    ],
    name: "removeFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "strike",
            type: "uint128",
          },
          {
            internalType: "uint16",
            name: "premiumRate",
            type: "uint16",
          },
          {
            internalType: "uint8",
            name: "vaultId",
            type: "uint8",
          },
        ],
        internalType: "struct StructureData.OnGoingOptionParameters[]",
        name: "_ongoingParameters",
        type: "tuple[]",
      },
    ],
    name: "sellOptions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_manager",
        type: "address",
      },
    ],
    name: "setManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "vaultDefinitions",
    outputs: [
      {
        internalType: "uint8",
        name: "vaultId",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "assetAmountDecimals",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
      {
        internalType: "bool",
        name: "callOrPut",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_vaultId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061302d806100206000396000f3fe6080604052600436106101355760003560e01c80638da5cb5b116100ab578063d5da2bab1161006f578063d5da2bab146103b0578063eeb883901461044c578063f2fde38b1461046c578063f4d4c9d71461048c578063f6316859146104ac578063fc382695146104bf57600080fd5b80638da5cb5b146102fe57806396721fbf14610330578063ac4b8a6414610350578063ad70c3c714610370578063d0ebdbe71461039057600080fd5b80632e862d29116100fd5780632e862d29146102495780633f48991414610269578063548db17414610289578063715018a6146102a95780637332655b146102be5780637f649783146102de57600080fd5b806306a45d3f1461013a5780631b35804914610170578063222f6b8314610187578063256d43d7146101a757806326161ec6146101ba575b600080fd5b34801561014657600080fd5b5061015a610155366004612a3e565b6104df565b6040516101679190612bdf565b60405180910390f35b34801561017c57600080fd5b506101856105b1565b005b34801561019357600080fd5b506101856101a2366004612a58565b61072f565b6101856101b5366004612a3e565b6107dc565b3480156101c657600080fd5b506101da6101d5366004612a3e565b610985565b6040516101679190600060e0820190506001600160801b038084511683528060208501511660208401528060408501511660408401528060608501511660608401528060808501511660808401528060a08501511660a08401525061ffff60c08401511660c083015292915050565b34801561025557600080fd5b50610185610264366004612816565b610ad9565b34801561027557600080fd5b50610185610284366004612a58565b610b0f565b34801561029557600080fd5b506101856102a4366004612535565b610c78565b3480156102b557600080fd5b50610185610d1c565b3480156102ca57600080fd5b506101856102d9366004612a58565b610d52565b3480156102ea57600080fd5b506101856102f9366004612535565b610dca565b34801561030a57600080fd5b506033546001600160a01b03165b6040516001600160a01b039091168152602001610167565b34801561033c57600080fd5b5061018561034b36600461273e565b610e6a565b34801561035c57600080fd5b50606654610318906001600160a01b031681565b34801561037c57600080fd5b5061018561038b3660046125d0565b611098565b34801561039c57600080fd5b506101856103ab3660046124ba565b611543565b3480156103bc57600080fd5b506104116103cb366004612a3e565b6067602052600090815260409020805460019091015460ff8083169261010081048216926001600160a01b036201000090920482169291811691600160a01b9091041685565b6040805160ff96871681529590941660208601526001600160a01b03928316938501939093521660608301521515608082015260a001610167565b34801561045857600080fd5b50610185610467366004612687565b611576565b34801561047857600080fd5b506101856104873660046124ba565b6116af565b34801561049857600080fd5b506101856104a7366004612a58565b611747565b6101856104ba366004612848565b611903565b3480156104cb57600080fd5b506101856104da3660046124d6565b611bed565b6104e76122ad565b8160ff811615801590610509575060665460ff600160a01b9091048116908216105b61051257600080fd5b60ff8316600090815260686020526040908190209051630aaf5c2360e21b81526004810182905273__$e36f5330ef2566ea8a183e1e27b10de643$__90632abd708c906024016101e06040518083038186803b15801561057157600080fd5b505af4158015610585573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a991906129a7565b949350505050565b336000908152606a602052604090205460ff166106045760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b60448201526064015b60405180910390fd5b606554156106245760405162461bcd60e51b81526004016105fb90612b9d565b6001606555336000908152606960205260408120905b606654600160a01b900460ff168110156107265760ff81166000908152606760209081526040808320546201000090046001600160a01b031680845291859052909120548015610711576001600160a01b0382166000818152602086905260408082209190915551631a4ca37b60e21b815233600482015260248101839052604481019190915273__$e36f5330ef2566ea8a183e1e27b10de643$__906369328dec9060640160006040518083038186803b1580156106f857600080fd5b505af415801561070c573d6000803e3d6000fd5b505050505b5050808061071e90612f48565b91505061063a565b50506000606555565b8160ff811615801590610751575060665460ff600160a01b9091048116908216105b61075a57600080fd5b60ff831660009081526068602052604090819020905163f6d4a19560e01b815273__$e36f5330ef2566ea8a183e1e27b10de643$__9163f6d4a195916107a7919033908790600401612c5a565b60006040518083038186803b1580156107bf57600080fd5b505af41580156107d3573d6000803e3d6000fd5b50505050505050565b8060ff8116158015906107fe575060665460ff600160a01b9091048116908216105b61080757600080fd5b606554156108275760405162461bcd60e51b81526004016105fb90612b9d565b6001606555346108625760405162461bcd60e51b81526020600482015260066024820152652176616c756560d01b60448201526064016105fb565b60ff82166000908152606760205260409020546201000090046001600160a01b031680156108bb5760405162461bcd60e51b81526004016105fb906020808252600490820152630428aa8960e31b604082015260600190565b60ff83166000908152606860205260409020600181015463ffffffff1661090f5760405162461bcd60e51b81526020600482015260086024820152670854dd185c9d195960c21b60448201526064016105fb565b604051633f7c9c6360e21b815273__$e36f5330ef2566ea8a183e1e27b10de643$__9063fdf2718c9061094a90849033903490600401612c5a565b60006040518083038186803b15801561096257600080fd5b505af4158015610976573d6000803e3d6000fd5b50506000606555505050505050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101919091528160ff8116158015906109e0575060665460ff600160a01b9091048116908216105b6109e957600080fd5b60ff83166000908152606860205260409020600181015461ffff640100000000820416904263ffffffff90911611610a2957610a26816001612d5a565b90505b33600090815260098301602052604090819020905163a8a328e760e01b8152600481018490526024810182905261ffff8316604482015273__$e36f5330ef2566ea8a183e1e27b10de643$__9063a8a328e79060640160e06040518083038186803b158015610a9757600080fd5b505af4158015610aab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610acf91906128f1565b9695505050505050565b6033546001600160a01b03163314610b035760405162461bcd60e51b81526004016105fb90612b68565b610b0c81611c97565b50565b8160ff811615801590610b31575060665460ff600160a01b9091048116908216105b610b3a57600080fd5b60655415610b5a5760405162461bcd60e51b81526004016105fb90612b9d565b600160655560ff8316600090815260686020526040908190209051631d48b99160e21b815273__$e36f5330ef2566ea8a183e1e27b10de643$__91637522e64491610bac919033908790600401612c5a565b60006040518083038186803b158015610bc457600080fd5b505af4158015610bd8573d6000803e3d6000fd5b5050505060ff831660009081526067602052604090819020549051631a4ca37b60e21b815233600482015260248101849052620100009091046001600160a01b0316604482015273__$e36f5330ef2566ea8a183e1e27b10de643$__906369328dec9060640160006040518083038186803b158015610c5657600080fd5b505af4158015610c6a573d6000803e3d6000fd5b505060006065555050505050565b6066546001600160a01b03163314610ca25760405162461bcd60e51b81526004016105fb90612bbd565b60005b8151811015610d18576000606a6000848481518110610cd457634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580610d1081612f48565b915050610ca5565b5050565b6033546001600160a01b03163314610d465760405162461bcd60e51b81526004016105fb90612b68565b610d506000611dc3565b565b8160ff811615801590610d74575060665460ff600160a01b9091048116908216105b610d7d57600080fd5b60ff83166000908152606860205260409081902090516347e5296160e01b815273__$e36f5330ef2566ea8a183e1e27b10de643$__916347e52961916107a7919033908790600401612c5a565b6066546001600160a01b03163314610df45760405162461bcd60e51b81526004016105fb90612bbd565b60005b8151811015610d18576001606a6000848481518110610e2657634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580610e6281612f48565b915050610df7565b60005b8151811015610d18576000828281518110610e9857634e487b7160e01b600052603260045260246000fd5b602002602001015190506000816020015161ffff1611610ee55760405162461bcd60e51b8152602060048201526008602482015267217072656d69756d60c01b60448201526064016105fb565b80516001600160801b0316610f265760405162461bcd60e51b815260206004820152600760248201526621737472696b6560c81b60448201526064016105fb565b60408181015160ff16600090815260686020528190209051631d319eb160e31b81526004810182905273__$e36f5330ef2566ea8a183e1e27b10de643$__9063e98cf5889060240160006040518083038186803b158015610f8657600080fd5b505af4158015610f9a573d6000803e3d6000fd5b50505050600181810154640100000000900461ffff1611610ff05760405162461bcd60e51b815260206004820152601060248201526f139bc81cd95b1b1a5b99c81c9bdd5b9960821b60448201526064016105fb565b600481015460028201906001600160a01b03161561103f5760405162461bcd60e51b815260206004820152600c60248201526b105b1c9958591e481cdbdb1960a21b60448201526064016105fb565b82516001909101805460209094015161ffff16600160801b0271ffffffffffffffffffffffffffffffffffff199094166001600160801b039092169190911792909217909155508061109081612f48565b915050610e6d565b6066546001600160a01b031633146110c25760405162461bcd60e51b81526004016105fb90612bbd565b60005b8151811015610d185760008282815181106110f057634e487b7160e01b600052603260045260246000fd5b60200260200101519050600081600001516001600160801b0316116111465760405162461bcd60e51b815260206004820152600c60248201526b08595e1c1a5c9e53195d995b60a21b60448201526064016105fb565b60208181015160ff16600090815260689091526040908190209051631d319eb160e31b81526004810182905273__$e36f5330ef2566ea8a183e1e27b10de643$__9063e98cf5889060240160006040518083038186803b1580156111a957600080fd5b505af41580156111bd573d6000803e3d6000fd5b505050506001810154600264010000000090910461ffff16116112155760405162461bcd60e51b815260206004820152601060248201526f139bc8195e1c1a5c9959081c9bdd5b9960821b60448201526064016105fb565b6005810180546001600160801b0316158061123b575060028101546001600160a01b0316155b1561124857505050611531565b60018101546001600160801b031661128c5760405162461bcd60e51b815260206004820152600760248201526621737472696b6560c81b60448201526064016105fb565b6020838101805160ff90811660009081526067909352604080842054925182168452832060010154620100009092046001600160a01b03169291600160a01b90041661131157845160018401546001600160801b039182169116116112f257600061134b565b8451600184015461130c91906001600160801b0316612ec2565b61134b565b600183015485516001600160801b0391821691161161133157600061134b565b6001830154855161134b916001600160801b031690612ec2565b60028401546001600160a01b0316600090815260696020526040812087516001600160801b0393841694509092611399911661139361138c6008600a612dfb565b8690611e15565b90611e2a565b90508086600801600060028960010160049054906101000a900461ffff166113c19190612eea565b61ffff1681526020810191909152604001600090812080546001600160801b0319166001600160801b0393841617905588518754919261140b929181169161139391889116611e15565b6001600160a01b038616600090815260208590526040902054909150611432908290611e36565b6001600160a01b03861660009081526020859052604081206001600160801b03928316905560018801548854919261148592859261147f929190911690600160801b900461ffff16611e42565b90611e57565b87549091506000906114b0906001600160801b0380821691611393918691600160801b900416611e15565b89549091506114d0908290600160801b90046001600160801b0316611e36565b89546001600160801b03918216600160801b02908216178a5560028a015461150391166114fd8484611e57565b90611e36565b60029990990180546001600160801b0319166001600160801b03909a16999099179098555050505050505050505b8061153b81612f48565b9150506110c5565b6033546001600160a01b0316331461156d5760405162461bcd60e51b81526004016105fb90612b68565b610b0c81611e63565b6066546001600160a01b031633146115a05760405162461bcd60e51b81526004016105fb90612bbd565b60005b8151811015610d185760008282815181106115ce57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151805160ff166000908152606890925260409091206001810154919250904263ffffffff90911611156116435760405162461bcd60e51b815260206004820152601260248201527130b63932b0b23c9035b4b1b5b2b21037b33360711b60448201526064016105fb565b6116504262093a80611e36565b600190910180546020909301516001600160801b031666010000000000000275ffffffffffffffffffffffffffffffff0000ffffffff1990931663ffffffff9290921691909117919091179055806116a781612f48565b9150506115a3565b6033546001600160a01b031633146116d95760405162461bcd60e51b81526004016105fb90612b68565b6001600160a01b03811661173e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105fb565b610b0c81611dc3565b8160ff811615801590611769575060665460ff600160a01b9091048116908216105b61177257600080fd5b606554156117925760405162461bcd60e51b81526004016105fb90612b9d565b6001606555816117ce5760405162461bcd60e51b815260206004820152600760248201526608585b5bdd5b9d60ca1b60448201526064016105fb565b60ff83166000908152606760205260409020546201000090046001600160a01b0316806118235760405162461bcd60e51b815260206004820152600360248201526208aa8960eb1b60448201526064016105fb565b60ff84166000908152606860205260409020600181015463ffffffff166118775760405162461bcd60e51b8152602060048201526008602482015267085cdd185c9d195960c21b60448201526064016105fb565b61188c6001600160a01b038316333087611eab565b604051633f7c9c6360e21b815273__$e36f5330ef2566ea8a183e1e27b10de643$__9063fdf2718c906118c790849033908990600401612c5a565b60006040518083038186803b1580156118df57600080fd5b505af41580156118f3573d6000803e3d6000fd5b5050600060655550505050505050565b336000908152606a602052604090205460ff166119515760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b60448201526064016105fb565b606554156119715760405162461bcd60e51b81526004016105fb90612b9d565b60016065556000805b8251811015611b635760008382815181106119a557634e487b7160e01b600052603260045260246000fd5b60209081029190910181015160ff8116600090815260689092526040918290209151631d319eb160e31b81526004810183905290925073__$e36f5330ef2566ea8a183e1e27b10de643$__9063e98cf5889060240160006040518083038186803b158015611a1257600080fd5b505af4158015611a26573d6000803e3d6000fd5b505050506002810180546001600160801b0316611a775760405162461bcd60e51b815260206004820152600f60248201526e139bdd1a1a5b99c81d1bc81cd95b1b608a1b60448201526064016105fb565b60028101546001600160a01b031615611ac15760405162461bcd60e51b815260206004820152600c60248201526b105b1c9958591e481cdbdb1960a21b60448201526064016105fb565b60018101548154600091611ae9916001600160801b031690600160801b900461ffff16611f05565b60ff85166000908152606760205260409020549091506201000090046001600160a01b031680611b2457611b1d8783611e36565b9650611b39565b611b396001600160a01b038216333085611eab565b505060020180546001600160a01b0319163317905550819050611b5b81612f48565b91505061197a565b5034811015611ba55760405162461bcd60e51b815260206004820152600e60248201526d09cdee840cadcdeeaced040cae8d60931b60448201526064016105fb565b3481111561072657336108fc611bbb3484612f05565b6040518115909202916000818181858888f19350505050158015611be3573d6000803e3d6000fd5b5050506000606555565b600054610100900460ff1680611c06575060005460ff16155b611c225760405162461bcd60e51b81526004016105fb90612b1a565b600054610100900460ff16158015611c44576000805461ffff19166101011790555b6001600160a01b038416611c5757600080fd5b6000606555611c64611f17565b611c6d846116af565b611c7683611e63565b611c7f82611c97565b8015611c91576000805461ff00191690555b50505050565b8051606654600160a01b900460ff1660005b82811015611da0576000848281518110611cd357634e487b7160e01b600052603260045260246000fd5b602090810291909101015160ff841681529050806067600085611cf581612f63565b60ff9182168352602080840194909452604092830160002085518154958701519487015190841661ffff199096169590951761010094909316939093029190911762010000600160b01b031916620100006001600160a01b0394851602178255606084015160019092018054608090950151929093166001600160a81b031990941693909317600160a01b911515919091021790559250819050611d9881612f48565b915050611ca9565b506066805460ff909216600160a01b0260ff60a01b199092169190911790555050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000611e218284612ea3565b90505b92915050565b6000611e218284612d98565b6000611e218284612d80565b6000611e2161271061139361138c8583612d80565b6000611e218284612f05565b6001600160a01b038116611e895760405162461bcd60e51b81526004016105fb90612bbd565b606680546001600160a01b0319166001600160a01b0392909216919091179055565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611c91908590611f92565b6000611e216127106113938585611e15565b600054610100900460ff1680611f30575060005460ff16155b611f4c5760405162461bcd60e51b81526004016105fb90612b1a565b600054610100900460ff16158015611f6e576000805461ffff19166101011790555b611f76612069565b611f7e6120d3565b8015610b0c576000805461ff001916905550565b6000611fe7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166121339092919063ffffffff16565b805190915015612064578080602001905181019061200591906128d5565b6120645760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105fb565b505050565b600054610100900460ff1680612082575060005460ff16155b61209e5760405162461bcd60e51b81526004016105fb90612b1a565b600054610100900460ff16158015611f7e576000805461ffff19166101011790558015610b0c576000805461ff001916905550565b600054610100900460ff16806120ec575060005460ff16155b6121085760405162461bcd60e51b81526004016105fb90612b1a565b600054610100900460ff1615801561212a576000805461ffff19166101011790555b611f7e33611dc3565b6060612142848460008561214c565b90505b9392505050565b6060824710156121ad5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016105fb565b843b6121fb5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105fb565b600080866001600160a01b031685876040516122179190612acb565b60006040518083038185875af1925050503d8060008114612254576040519150601f19603f3d011682016040523d82523d6000602084013e612259565b606091505b5091509150612269828286612274565b979650505050505050565b60608315612283575081612145565b8251156122935782518084602001fd5b8160405162461bcd60e51b81526004016105fb9190612ae7565b6040805160e08101825260008082526020820181905291810182905260608101829052608081019190915260a0810161230d6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b81526040805160a0810182526000808252602082810182905292820181905260608201819052608082015291015290565b600082601f83011261234e578081fd5b8135602061236361235e83612d37565b612d07565b8281528181019085830160a080860288018501891015612381578687fd5b865b868110156124065781838b031215612399578788fd5b6123a1612c79565b6123aa846124a9565b81526123b78785016124a9565b878201526040808501356123ca81612faf565b908201526060848101356123dd81612faf565b908201526080848101356123f081612fc4565b9082015285529385019391810191600101612383565b509198975050505050505050565b600060a08284031215612425578081fd5b61242d612c79565b9050815161243a81612fd2565b8152602082015161244a81612fd2565b6020820152604082015161245d81612fd2565b6040820152606082015161247081612fe7565b6060820152608082015161248381612faf565b608082015292915050565b805161249981612fd2565b919050565b805161249981612fe7565b803560ff8116811461249957600080fd5b6000602082840312156124cb578081fd5b813561214581612faf565b6000806000606084860312156124ea578182fd5b83356124f581612faf565b9250602084013561250581612faf565b915060408401356001600160401b0381111561251f578182fd5b61252b8682870161233e565b9150509250925092565b60006020808385031215612547578182fd5b82356001600160401b0381111561255c578283fd5b8301601f8101851361256c578283fd5b803561257a61235e82612d37565b80828252848201915084840188868560051b8701011115612599578687fd5b8694505b838510156125c45780356125b081612faf565b83526001949094019391850191850161259d565b50979650505050505050565b600060208083850312156125e2578182fd5b82356001600160401b038111156125f7578283fd5b8301601f81018513612607578283fd5b803561261561235e82612d37565b80828252848201915084840188868560061b8701011115612634578687fd5b8694505b838510156125c457604080828b031215612650578788fd5b612658612ca1565b823561266381612fd2565b81526126708389016124a9565b818901528452600195909501949286019201612638565b60006020808385031215612699578182fd5b82356001600160401b038111156126ae578283fd5b8301601f810185136126be578283fd5b80356126cc61235e82612d37565b80828252848201915084840188868560061b87010111156126eb578687fd5b8694505b838510156125c457604080828b031215612707578788fd5b61270f612ca1565b612718836124a9565b81528783013561272781612fd2565b8189015284526001959095019492860192016126ef565b60006020808385031215612750578182fd5b82356001600160401b03811115612765578283fd5b8301601f81018513612775578283fd5b803561278361235e82612d37565b818152838101908385016060808502860187018a10156127a1578788fd5b8795505b848610156128085780828b0312156127bb578788fd5b6127c3612cc3565b82356127ce81612fd2565b8152828801356127dd81612fe7565b8189015260406127ee8482016124a9565b9082015284526001959095019492860192908101906127a5565b509098975050505050505050565b600060208284031215612827578081fd5b81356001600160401b0381111561283c578182fd5b6105a98482850161233e565b6000602080838503121561285a578182fd5b82356001600160401b0381111561286f578283fd5b8301601f8101851361287f578283fd5b803561288d61235e82612d37565b80828252848201915084840188868560051b87010111156128ac578687fd5b8694505b838510156125c4576128c1816124a9565b8352600194909401939185019185016128b0565b6000602082840312156128e6578081fd5b815161214581612fc4565b600060e08284031215612902578081fd5b60405160e081018181106001600160401b038211171561292457612924612f99565b604052825161293281612fd2565b8152602083015161294281612fd2565b6020820152604083015161295581612fd2565b6040820152606083015161296881612fd2565b60608201526129796080840161248e565b608082015261298a60a0840161248e565b60a082015261299b60c0840161249e565b60c08201529392505050565b60006101e082840312156129b9578081fd5b6129c1612ce5565b82516129cc81612fd2565b815260208301516129dc81612fd2565b6020820152604083015163ffffffff811681146129f7578283fd5b6040820152612a086060840161249e565b6060820152612a196080840161248e565b6080820152612a2b8460a08501612414565b60a082015261299b846101408501612414565b600060208284031215612a4f578081fd5b611e21826124a9565b60008060408385031215612a6a578182fd5b612a73836124a9565b946020939093013593505050565b80516001600160801b0390811683526020808301518216908401526040808301519091169083015260608082015161ffff16908301526080908101516001600160a01b0316910152565b60008251612add818460208701612f1c565b9190910192915050565b6020815260008251806020840152612b06816040850160208701612f1c565b601f01601f19169190910160400192915050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600690820152651b1bd8dad95960d21b604082015260600190565b60208082526008908201526710b6b0b730b3b2b960c11b604082015260600190565b60006101e0820190506001600160801b0380845116835280602085015116602084015263ffffffff604085015116604084015261ffff60608501511660608401528060808501511660808401525060a0830151612c3f60a0840182612a81565b5060c0830151612c53610140840182612a81565b5092915050565b9283526001600160a01b03919091166020830152604082015260600190565b60405160a081016001600160401b0381118282101715612c9b57612c9b612f99565b60405290565b604080519081016001600160401b0381118282101715612c9b57612c9b612f99565b604051606081016001600160401b0381118282101715612c9b57612c9b612f99565b60405160e081016001600160401b0381118282101715612c9b57612c9b612f99565b604051601f8201601f191681016001600160401b0381118282101715612d2f57612d2f612f99565b604052919050565b60006001600160401b03821115612d5057612d50612f99565b5060051b60200190565b600061ffff808316818516808303821115612d7757612d77612f83565b01949350505050565b60008219821115612d9357612d93612f83565b500190565b600082612db357634e487b7160e01b81526012600452602481fd5b500490565b600181815b80851115612df3578160001904821115612dd957612dd9612f83565b80851615612de657918102915b93841c9390800290612dbd565b509250929050565b6000611e218383600082612e1157506001611e24565b81612e1e57506000611e24565b8160018114612e345760028114612e3e57612e5a565b6001915050611e24565b60ff841115612e4f57612e4f612f83565b50506001821b611e24565b5060208310610133831016604e8410600b8410161715612e7d575081810a611e24565b612e878383612db8565b8060001904821115612e9b57612e9b612f83565b029392505050565b6000816000190483118215151615612ebd57612ebd612f83565b500290565b60006001600160801b0383811690831681811015612ee257612ee2612f83565b039392505050565b600061ffff83811690831681811015612ee257612ee2612f83565b600082821015612f1757612f17612f83565b500390565b60005b83811015612f37578181015183820152602001612f1f565b83811115611c915750506000910152565b6000600019821415612f5c57612f5c612f83565b5060010190565b600060ff821660ff811415612f7a57612f7a612f83565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610b0c57600080fd5b8015158114610b0c57600080fd5b6001600160801b0381168114610b0c57600080fd5b61ffff81168114610b0c57600080fdfea2646970667358221220a4604593d6061fccb450538866f68371926f0ea108f1c1c5bb6aed09a7c5ee3a64736f6c63430008040033";

type SingleDirectionOptionUpgradeableConstructorParams =
  | [
      linkLibraryAddresses: SingleDirectionOptionUpgradeableLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SingleDirectionOptionUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class SingleDirectionOptionUpgradeable__factory extends ContractFactory {
  constructor(...args: SingleDirectionOptionUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        SingleDirectionOptionUpgradeable__factory.linkBytecode(
          linkLibraryAddresses
        ),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: SingleDirectionOptionUpgradeableLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e36f5330ef2566ea8a183e1e27b10de643\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/OptionLifecycle.sol:OptionLifecycle"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SingleDirectionOptionUpgradeable> {
    return super.deploy(
      overrides || {}
    ) as Promise<SingleDirectionOptionUpgradeable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SingleDirectionOptionUpgradeable {
    return super.attach(address) as SingleDirectionOptionUpgradeable;
  }
  connect(signer: Signer): SingleDirectionOptionUpgradeable__factory {
    return super.connect(signer) as SingleDirectionOptionUpgradeable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SingleDirectionOptionUpgradeableInterface {
    return new utils.Interface(
      _abi
    ) as SingleDirectionOptionUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SingleDirectionOptionUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SingleDirectionOptionUpgradeable;
  }
}

export interface SingleDirectionOptionUpgradeableLibraryAddresses {
  ["contracts/libraries/OptionLifecycle.sol:OptionLifecycle"]: string;
}
