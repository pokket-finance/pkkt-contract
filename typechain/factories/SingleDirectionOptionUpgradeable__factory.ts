/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SingleDirectionOptionUpgradeable,
  SingleDirectionOptionUpgradeableInterface,
} from "../SingleDirectionOptionUpgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "vaultId",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "assetAmountDecimals",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "bool",
            name: "callOrPut",
            type: "bool",
          },
        ],
        internalType: "struct StructureData.VaultDefinition[]",
        name: "_vaultDefinitions",
        type: "tuple[]",
      },
    ],
    name: "addVaults",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8[]",
        name: "_vaultIds",
        type: "uint8[]",
      },
    ],
    name: "buyOptions",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_vaultId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_redeemAmount",
        type: "uint256",
      },
    ],
    name: "cancelWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collectOptionHolderValues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_vaultId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_vaultId",
        type: "uint8",
      },
    ],
    name: "depositETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "expiryLevel",
            type: "uint128",
          },
          {
            internalType: "uint8",
            name: "vaultId",
            type: "uint8",
          },
        ],
        internalType: "struct StructureData.ExpiredOptionParameters[]",
        name: "_expiryParameters",
        type: "tuple[]",
      },
    ],
    name: "expireOptions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_vaultId",
        type: "uint8",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "pending",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "redeemed",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "expiredAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "expiredQueuedRedeemAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "onGoingAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "onGoingQueuedRedeemAmount",
            type: "uint128",
          },
          {
            internalType: "uint16",
            name: "lastUpdateRound",
            type: "uint16",
          },
        ],
        internalType: "struct StructureData.UserState",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_vaultId",
        type: "uint8",
      },
    ],
    name: "getVaultState",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "totalPending",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "totalRedeemed",
            type: "uint128",
          },
          {
            internalType: "uint32",
            name: "cutOffAt",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "currentRound",
            type: "uint16",
          },
          {
            internalType: "uint128",
            name: "maxCapacity",
            type: "uint128",
          },
          {
            components: [
              {
                internalType: "uint128",
                name: "amount",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "queuedRedeemAmount",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "strike",
                type: "uint128",
              },
              {
                internalType: "uint16",
                name: "premiumRate",
                type: "uint16",
              },
              {
                internalType: "address",
                name: "buyerAddress",
                type: "address",
              },
            ],
            internalType: "struct StructureData.OptionState",
            name: "onGoing",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint128",
                name: "amount",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "queuedRedeemAmount",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "strike",
                type: "uint128",
              },
              {
                internalType: "uint16",
                name: "premiumRate",
                type: "uint16",
              },
              {
                internalType: "address",
                name: "buyerAddress",
                type: "address",
              },
            ],
            internalType: "struct StructureData.OptionState",
            name: "expired",
            type: "tuple",
          },
        ],
        internalType: "struct StructureData.VaultSnapShot",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_manager",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "vaultId",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "assetAmountDecimals",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "bool",
            name: "callOrPut",
            type: "bool",
          },
        ],
        internalType: "struct StructureData.VaultDefinition[]",
        name: "_vaultDefinitions",
        type: "tuple[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_vaultId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_redeemAmount",
        type: "uint256",
      },
    ],
    name: "initiateWithraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "vaultId",
            type: "uint8",
          },
          {
            internalType: "uint128",
            name: "maxCapacity",
            type: "uint128",
          },
        ],
        internalType: "struct StructureData.KickOffOptionParameters[]",
        name: "_kickoffs",
        type: "tuple[]",
      },
    ],
    name: "kickOffOptions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "managerRoleAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "strike",
            type: "uint128",
          },
          {
            internalType: "uint16",
            name: "premiumRate",
            type: "uint16",
          },
          {
            internalType: "uint8",
            name: "vaultId",
            type: "uint8",
          },
        ],
        internalType: "struct StructureData.OnGoingOptionParameters[]",
        name: "_ongoingParameters",
        type: "tuple[]",
      },
    ],
    name: "sellOptions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_manager",
        type: "address",
      },
    ],
    name: "setManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "vaultDefinitions",
    outputs: [
      {
        internalType: "uint8",
        name: "vaultId",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "assetAmountDecimals",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "bool",
        name: "callOrPut",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_vaultId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612deb806100206000396000f3fe60806040526004361061011f5760003560e01c806396721fbf116100a0578063d5da2bab11610064578063d5da2bab1461037a578063eeb8839014610402578063f2fde38b14610422578063f4d4c9d714610442578063f63168591461046257600080fd5b806396721fbf146102da578063ac4b8a64146102fa578063ad70c3c71461031a578063b88c0aed1461033a578063d0ebdbe71461035a57600080fd5b806326161ec6116100e757806326161ec6146101c45780633f48991414610253578063715018a6146102735780637332655b146102885780638da5cb5b146102a857600080fd5b8063048dc3ab1461012457806306a45d3f146101465780631b3580491461017c578063222f6b8314610191578063256d43d7146101b1575b600080fd5b34801561013057600080fd5b5061014461013f3660046125d4565b610475565b005b34801561015257600080fd5b506101666101613660046127fc565b6104b4565b604051610173919061299d565b60405180910390f35b34801561018857600080fd5b50610144610586565b34801561019d57600080fd5b506101446101ac366004612816565b6106ff565b6101446101bf3660046127fc565b6107ac565b3480156101d057600080fd5b506101e46101df3660046127fc565b610955565b6040516101739190600060e0820190506001600160801b038084511683528060208501511660208401528060408501511660408401528060608501511660608401528060808501511660808401528060a08501511660a08401525061ffff60c08401511660c083015292915050565b34801561025f57600080fd5b5061014461026e366004612816565b610aa9565b34801561027f57600080fd5b50610144610c12565b34801561029457600080fd5b506101446102a3366004612816565b610c48565b3480156102b457600080fd5b506033546001600160a01b03165b6040516001600160a01b039091168152602001610173565b3480156102e657600080fd5b506101446102f53660046124fc565b610cc0565b34801561030657600080fd5b506066546102c2906001600160a01b031681565b34801561032657600080fd5b50610144610335366004612382565b610ef2565b34801561034657600080fd5b50610144610355366004612323565b61139a565b34801561036657600080fd5b50610144610375366004612307565b611444565b34801561038657600080fd5b506103cd6103953660046127fc565b60676020526000908152604090205460ff8082169161010081048216916001600160a01b036201000083041691600160b01b90041684565b6040805160ff95861681529490931660208501526001600160a01b039091169183019190915215156060820152608001610173565b34801561040e57600080fd5b5061014461041d366004612445565b611477565b34801561042e57600080fd5b5061014461043d366004612307565b6115b0565b34801561044e57600080fd5b5061014461045d366004612816565b611648565b610144610470366004612606565b611804565b6033546001600160a01b031633146104a85760405162461bcd60e51b815260040161049f90612926565b60405180910390fd5b6104b181611aee565b50565b6104bc6120e8565b8160ff8116158015906104de575060665460ff600160a01b9091048116908216105b6104e757600080fd5b60ff8316600090815260686020526040908190209051630aaf5c2360e21b81526004810182905273__$e36f5330ef2566ea8a183e1e27b10de643$__90632abd708c906024016101e06040518083038186803b15801561054657600080fd5b505af415801561055a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057e9190612765565b949350505050565b336000908152606a602052604090205460ff166105d45760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b604482015260640161049f565b606554156105f45760405162461bcd60e51b815260040161049f9061295b565b6001606555336000908152606960205260408120905b606654600160a01b900460ff168110156106f65760ff81166000908152606760209081526040808320546201000090046001600160a01b0316808452918590529091205480156106e1576001600160a01b0382166000818152602086905260408082209190915551631a4ca37b60e21b815233600482015260248101839052604481019190915273__$e36f5330ef2566ea8a183e1e27b10de643$__906369328dec9060640160006040518083038186803b1580156106c857600080fd5b505af41580156106dc573d6000803e3d6000fd5b505050505b505080806106ee90612d06565b91505061060a565b50506000606555565b8160ff811615801590610721575060665460ff600160a01b9091048116908216105b61072a57600080fd5b60ff831660009081526068602052604090819020905163f6d4a19560e01b815273__$e36f5330ef2566ea8a183e1e27b10de643$__9163f6d4a19591610777919033908790600401612a18565b60006040518083038186803b15801561078f57600080fd5b505af41580156107a3573d6000803e3d6000fd5b50505050505050565b8060ff8116158015906107ce575060665460ff600160a01b9091048116908216105b6107d757600080fd5b606554156107f75760405162461bcd60e51b815260040161049f9061295b565b6001606555346108325760405162461bcd60e51b81526020600482015260066024820152652176616c756560d01b604482015260640161049f565b60ff82166000908152606760205260409020546201000090046001600160a01b0316801561088b5760405162461bcd60e51b815260040161049f906020808252600490820152630428aa8960e31b604082015260600190565b60ff83166000908152606860205260409020600181015463ffffffff166108df5760405162461bcd60e51b81526020600482015260086024820152670854dd185c9d195960c21b604482015260640161049f565b604051633f7c9c6360e21b815273__$e36f5330ef2566ea8a183e1e27b10de643$__9063fdf2718c9061091a90849033903490600401612a18565b60006040518083038186803b15801561093257600080fd5b505af4158015610946573d6000803e3d6000fd5b50506000606555505050505050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101919091528160ff8116158015906109b0575060665460ff600160a01b9091048116908216105b6109b957600080fd5b60ff83166000908152606860205260409020600181015461ffff640100000000820416904263ffffffff909116116109f9576109f6816001612b18565b90505b33600090815260098301602052604090819020905163a8a328e760e01b8152600481018490526024810182905261ffff8316604482015273__$e36f5330ef2566ea8a183e1e27b10de643$__9063a8a328e79060640160e06040518083038186803b158015610a6757600080fd5b505af4158015610a7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9f91906126af565b9695505050505050565b8160ff811615801590610acb575060665460ff600160a01b9091048116908216105b610ad457600080fd5b60655415610af45760405162461bcd60e51b815260040161049f9061295b565b600160655560ff8316600090815260686020526040908190209051631d48b99160e21b815273__$e36f5330ef2566ea8a183e1e27b10de643$__91637522e64491610b46919033908790600401612a18565b60006040518083038186803b158015610b5e57600080fd5b505af4158015610b72573d6000803e3d6000fd5b5050505060ff831660009081526067602052604090819020549051631a4ca37b60e21b815233600482015260248101849052620100009091046001600160a01b0316604482015273__$e36f5330ef2566ea8a183e1e27b10de643$__906369328dec9060640160006040518083038186803b158015610bf057600080fd5b505af4158015610c04573d6000803e3d6000fd5b505060006065555050505050565b6033546001600160a01b03163314610c3c5760405162461bcd60e51b815260040161049f90612926565b610c466000611bfe565b565b8160ff811615801590610c6a575060665460ff600160a01b9091048116908216105b610c7357600080fd5b60ff83166000908152606860205260409081902090516347e5296160e01b815273__$e36f5330ef2566ea8a183e1e27b10de643$__916347e5296191610777919033908790600401612a18565b60005b8151811015610eee576000828281518110610cee57634e487b7160e01b600052603260045260246000fd5b602002602001015190506000816020015161ffff1611610d3b5760405162461bcd60e51b8152602060048201526008602482015267217072656d69756d60c01b604482015260640161049f565b80516001600160801b0316610d7c5760405162461bcd60e51b815260206004820152600760248201526621737472696b6560c81b604482015260640161049f565b60408181015160ff16600090815260686020528190209051631d319eb160e31b81526004810182905273__$e36f5330ef2566ea8a183e1e27b10de643$__9063e98cf5889060240160006040518083038186803b158015610ddc57600080fd5b505af4158015610df0573d6000803e3d6000fd5b50505050600181810154640100000000900461ffff1611610e465760405162461bcd60e51b815260206004820152601060248201526f139bc81cd95b1b1a5b99c81c9bdd5b9960821b604482015260640161049f565b600481015460028201906001600160a01b031615610e955760405162461bcd60e51b815260206004820152600c60248201526b105b1c9958591e481cdbdb1960a21b604482015260640161049f565b82516001909101805460209094015161ffff16600160801b0271ffffffffffffffffffffffffffffffffffff199094166001600160801b0390921691909117929092179091555080610ee681612d06565b915050610cc3565b5050565b6066546001600160a01b03163314610f1c5760405162461bcd60e51b815260040161049f9061297b565b60005b8151811015610eee576000828281518110610f4a57634e487b7160e01b600052603260045260246000fd5b60200260200101519050600081600001516001600160801b031611610fa05760405162461bcd60e51b815260206004820152600c60248201526b08595e1c1a5c9e53195d995b60a21b604482015260640161049f565b60208181015160ff16600090815260689091526040908190209051631d319eb160e31b81526004810182905273__$e36f5330ef2566ea8a183e1e27b10de643$__9063e98cf5889060240160006040518083038186803b15801561100357600080fd5b505af4158015611017573d6000803e3d6000fd5b505050506001810154600264010000000090910461ffff161161106f5760405162461bcd60e51b815260206004820152601060248201526f139bc8195e1c1a5c9959081c9bdd5b9960821b604482015260640161049f565b6005810180546001600160801b03161580611095575060028101546001600160a01b0316155b156110a257505050611388565b60018101546001600160801b03166110e65760405162461bcd60e51b815260206004820152600760248201526621737472696b6560c81b604482015260640161049f565b6020838101805160ff90811660009081526067909352604080842054925182168452832054620100009092046001600160a01b03169291600160b01b90041661116857845160018401546001600160801b039182169116116111495760006111a2565b8451600184015461116391906001600160801b0316612c80565b6111a2565b600183015485516001600160801b039182169116116111885760006111a2565b600183015485516111a2916001600160801b031690612c80565b60028401546001600160a01b0316600090815260696020526040812087516001600160801b03938416945090926111f091166111ea6111e36008600a612bb9565b8690611c50565b90611c65565b90508086600801600060028960010160049054906101000a900461ffff166112189190612ca8565b61ffff1681526020810191909152604001600090812080546001600160801b0319166001600160801b0393841617905588518754919261126292918116916111ea91889116611c50565b6001600160a01b038616600090815260208590526040902054909150611289908290611c71565b6001600160a01b03861660009081526020859052604081206001600160801b0392831690556001880154885491926112dc9285926112d6929190911690600160801b900461ffff16611c7d565b90611c92565b8754909150600090611307906001600160801b03808216916111ea918691600160801b900416611c50565b8954909150611327908290600160801b90046001600160801b0316611c71565b89546001600160801b03918216600160801b02908216178a5560028a015461135a91166113548484611c92565b90611c71565b60029990990180546001600160801b0319166001600160801b03909a16999099179098555050505050505050505b8061139281612d06565b915050610f1f565b600054610100900460ff16806113b3575060005460ff16155b6113cf5760405162461bcd60e51b815260040161049f906128d8565b600054610100900460ff161580156113f1576000805461ffff19166101011790555b6001600160a01b03841661140457600080fd5b6000606555611411611c9e565b61141a846115b0565b61142383611d19565b61142c82611aee565b801561143e576000805461ff00191690555b50505050565b6033546001600160a01b0316331461146e5760405162461bcd60e51b815260040161049f90612926565b6104b181611d19565b6066546001600160a01b031633146114a15760405162461bcd60e51b815260040161049f9061297b565b60005b8151811015610eee5760008282815181106114cf57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151805160ff166000908152606890925260409091206001810154919250904263ffffffff90911611156115445760405162461bcd60e51b815260206004820152601260248201527130b63932b0b23c9035b4b1b5b2b21037b33360711b604482015260640161049f565b6115514262093a80611c71565b600190910180546020909301516001600160801b031666010000000000000275ffffffffffffffffffffffffffffffff0000ffffffff1990931663ffffffff9290921691909117919091179055806115a881612d06565b9150506114a4565b6033546001600160a01b031633146115da5760405162461bcd60e51b815260040161049f90612926565b6001600160a01b03811661163f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161049f565b6104b181611bfe565b8160ff81161580159061166a575060665460ff600160a01b9091048116908216105b61167357600080fd5b606554156116935760405162461bcd60e51b815260040161049f9061295b565b6001606555816116cf5760405162461bcd60e51b815260206004820152600760248201526608585b5bdd5b9d60ca1b604482015260640161049f565b60ff83166000908152606760205260409020546201000090046001600160a01b0316806117245760405162461bcd60e51b815260206004820152600360248201526208aa8960eb1b604482015260640161049f565b60ff84166000908152606860205260409020600181015463ffffffff166117785760405162461bcd60e51b8152602060048201526008602482015267085cdd185c9d195960c21b604482015260640161049f565b61178d6001600160a01b038316333087611d61565b604051633f7c9c6360e21b815273__$e36f5330ef2566ea8a183e1e27b10de643$__9063fdf2718c906117c890849033908990600401612a18565b60006040518083038186803b1580156117e057600080fd5b505af41580156117f4573d6000803e3d6000fd5b5050600060655550505050505050565b336000908152606a602052604090205460ff166118525760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b604482015260640161049f565b606554156118725760405162461bcd60e51b815260040161049f9061295b565b60016065556000805b8251811015611a645760008382815181106118a657634e487b7160e01b600052603260045260246000fd5b60209081029190910181015160ff8116600090815260689092526040918290209151631d319eb160e31b81526004810183905290925073__$e36f5330ef2566ea8a183e1e27b10de643$__9063e98cf5889060240160006040518083038186803b15801561191357600080fd5b505af4158015611927573d6000803e3d6000fd5b505050506002810180546001600160801b03166119785760405162461bcd60e51b815260206004820152600f60248201526e139bdd1a1a5b99c81d1bc81cd95b1b608a1b604482015260640161049f565b60028101546001600160a01b0316156119c25760405162461bcd60e51b815260206004820152600c60248201526b105b1c9958591e481cdbdb1960a21b604482015260640161049f565b600181015481546000916119ea916001600160801b031690600160801b900461ffff16611dbb565b60ff85166000908152606760205260409020549091506201000090046001600160a01b031680611a2557611a1e8783611c71565b9650611a3a565b611a3a6001600160a01b038216333085611d61565b505060020180546001600160a01b0319163317905550819050611a5c81612d06565b91505061187b565b5034811015611aa65760405162461bcd60e51b815260206004820152600e60248201526d09cdee840cadcdeeaced040cae8d60931b604482015260640161049f565b348111156106f657336108fc611abc3484612cc3565b6040518115909202916000818181858888f19350505050158015611ae4573d6000803e3d6000fd5b5050506000606555565b8051606654600160a01b900460ff1660005b82811015611bdb576000848281518110611b2a57634e487b7160e01b600052603260045260246000fd5b602090810291909101015160ff841681529050806067600085611b4c81612d21565b60ff918216835260208084019490945260409283016000208551815495870151948701516060909701511515600160b01b0260ff60b01b196001600160a01b0390981662010000029790971662010000600160b81b03199585166101000261ffff1990971691909416179490941792909216179290921790559250819050611bd381612d06565b915050611b00565b506066805460ff909216600160a01b0260ff60a01b199092169190911790555050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000611c5c8284612c61565b90505b92915050565b6000611c5c8284612b56565b6000611c5c8284612b3e565b6000611c5c6127106111ea6111e38583612b3e565b6000611c5c8284612cc3565b600054610100900460ff1680611cb7575060005460ff16155b611cd35760405162461bcd60e51b815260040161049f906128d8565b600054610100900460ff16158015611cf5576000805461ffff19166101011790555b611cfd611dcd565b611d05611e37565b80156104b1576000805461ff001916905550565b6001600160a01b038116611d3f5760405162461bcd60e51b815260040161049f9061297b565b606680546001600160a01b0319166001600160a01b0392909216919091179055565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261143e908590611e97565b6000611c5c6127106111ea8585611c50565b600054610100900460ff1680611de6575060005460ff16155b611e025760405162461bcd60e51b815260040161049f906128d8565b600054610100900460ff16158015611d05576000805461ffff191661010117905580156104b1576000805461ff001916905550565b600054610100900460ff1680611e50575060005460ff16155b611e6c5760405162461bcd60e51b815260040161049f906128d8565b600054610100900460ff16158015611e8e576000805461ffff19166101011790555b611d0533611bfe565b6000611eec826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611f6e9092919063ffffffff16565b805190915015611f695780806020019051810190611f0a9190612693565b611f695760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161049f565b505050565b6060611f7d8484600085611f87565b90505b9392505050565b606082471015611fe85760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161049f565b843b6120365760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161049f565b600080866001600160a01b031685876040516120529190612889565b60006040518083038185875af1925050503d806000811461208f576040519150601f19603f3d011682016040523d82523d6000602084013e612094565b606091505b50915091506120a48282866120af565b979650505050505050565b606083156120be575081611f80565b8251156120ce5782518084602001fd5b8160405162461bcd60e51b815260040161049f91906128a5565b6040805160e08101825260008082526020820181905291810182905260608101829052608081019190915260a081016121486040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b81526040805160a0810182526000808252602082810182905292820181905260608201819052608082015291015290565b600082601f830112612189578081fd5b8135602061219e61219983612af5565b612ac5565b80838252828201915082860187848660071b89010111156121bd578586fd5b855b8581101561223257608080838b0312156121d7578788fd5b6121df612a37565b6121e8846122f6565b81526121f58785016122f6565b8782015260408085013561220881612d6d565b9082015260608481013561221b81612d82565b9082015285529385019391909101906001016121bf565b5090979650505050505050565b600060a08284031215612250578081fd5b60405160a081018181106001600160401b038211171561227257612272612d57565b8060405250809150825161228581612d90565b8152602083015161229581612d90565b602082015260408301516122a881612d90565b604082015260608301516122bb81612da5565b606082015260808301516122ce81612d6d565b6080919091015292915050565b80516122e681612d90565b919050565b80516122e681612da5565b803560ff811681146122e657600080fd5b600060208284031215612318578081fd5b8135611f8081612d6d565b600080600060608486031215612337578182fd5b833561234281612d6d565b9250602084013561235281612d6d565b915060408401356001600160401b0381111561236c578182fd5b61237886828701612179565b9150509250925092565b60006020808385031215612394578182fd5b82356001600160401b038111156123a9578283fd5b8301601f810185136123b9578283fd5b80356123c761219982612af5565b80828252848201915084840188868560061b87010111156123e6578687fd5b8694505b8385101561243957604080828b031215612402578788fd5b61240a612a5f565b823561241581612d90565b81526124228389016122f6565b8189015284526001959095019492860192016123ea565b50979650505050505050565b60006020808385031215612457578182fd5b82356001600160401b0381111561246c578283fd5b8301601f8101851361247c578283fd5b803561248a61219982612af5565b80828252848201915084840188868560061b87010111156124a9578687fd5b8694505b8385101561243957604080828b0312156124c5578788fd5b6124cd612a5f565b6124d6836122f6565b8152878301356124e581612d90565b8189015284526001959095019492860192016124ad565b6000602080838503121561250e578182fd5b82356001600160401b03811115612523578283fd5b8301601f81018513612533578283fd5b803561254161219982612af5565b818152838101908385016060808502860187018a101561255f578788fd5b8795505b848610156125c65780828b031215612579578788fd5b612581612a81565b823561258c81612d90565b81528288013561259b81612da5565b8189015260406125ac8482016122f6565b908201528452600195909501949286019290810190612563565b509098975050505050505050565b6000602082840312156125e5578081fd5b81356001600160401b038111156125fa578182fd5b61057e84828501612179565b60006020808385031215612618578182fd5b82356001600160401b0381111561262d578283fd5b8301601f8101851361263d578283fd5b803561264b61219982612af5565b80828252848201915084840188868560051b870101111561266a578687fd5b8694505b838510156124395761267f816122f6565b83526001949094019391850191850161266e565b6000602082840312156126a4578081fd5b8151611f8081612d82565b600060e082840312156126c0578081fd5b60405160e081018181106001600160401b03821117156126e2576126e2612d57565b60405282516126f081612d90565b8152602083015161270081612d90565b6020820152604083015161271381612d90565b6040820152606083015161272681612d90565b6060820152612737608084016122db565b608082015261274860a084016122db565b60a082015261275960c084016122eb565b60c08201529392505050565b60006101e08284031215612777578081fd5b61277f612aa3565b825161278a81612d90565b8152602083015161279a81612d90565b6020820152604083015163ffffffff811681146127b5578283fd5b60408201526127c6606084016122eb565b60608201526127d7608084016122db565b60808201526127e98460a0850161223f565b60a082015261275984610140850161223f565b60006020828403121561280d578081fd5b611c5c826122f6565b60008060408385031215612828578182fd5b612831836122f6565b946020939093013593505050565b80516001600160801b0390811683526020808301518216908401526040808301519091169083015260608082015161ffff16908301526080908101516001600160a01b0316910152565b6000825161289b818460208701612cda565b9190910192915050565b60208152600082518060208401526128c4816040850160208701612cda565b601f01601f19169190910160400192915050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600690820152651b1bd8dad95960d21b604082015260600190565b60208082526008908201526710b6b0b730b3b2b960c11b604082015260600190565b60006101e0820190506001600160801b0380845116835280602085015116602084015263ffffffff604085015116604084015261ffff60608501511660608401528060808501511660808401525060a08301516129fd60a084018261283f565b5060c0830151612a1161014084018261283f565b5092915050565b9283526001600160a01b03919091166020830152604082015260600190565b604051608081016001600160401b0381118282101715612a5957612a59612d57565b60405290565b604080519081016001600160401b0381118282101715612a5957612a59612d57565b604051606081016001600160401b0381118282101715612a5957612a59612d57565b60405160e081016001600160401b0381118282101715612a5957612a59612d57565b604051601f8201601f191681016001600160401b0381118282101715612aed57612aed612d57565b604052919050565b60006001600160401b03821115612b0e57612b0e612d57565b5060051b60200190565b600061ffff808316818516808303821115612b3557612b35612d41565b01949350505050565b60008219821115612b5157612b51612d41565b500190565b600082612b7157634e487b7160e01b81526012600452602481fd5b500490565b600181815b80851115612bb1578160001904821115612b9757612b97612d41565b80851615612ba457918102915b93841c9390800290612b7b565b509250929050565b6000611c5c8383600082612bcf57506001611c5f565b81612bdc57506000611c5f565b8160018114612bf25760028114612bfc57612c18565b6001915050611c5f565b60ff841115612c0d57612c0d612d41565b50506001821b611c5f565b5060208310610133831016604e8410600b8410161715612c3b575081810a611c5f565b612c458383612b76565b8060001904821115612c5957612c59612d41565b029392505050565b6000816000190483118215151615612c7b57612c7b612d41565b500290565b60006001600160801b0383811690831681811015612ca057612ca0612d41565b039392505050565b600061ffff83811690831681811015612ca057612ca0612d41565b600082821015612cd557612cd5612d41565b500390565b60005b83811015612cf5578181015183820152602001612cdd565b8381111561143e5750506000910152565b6000600019821415612d1a57612d1a612d41565b5060010190565b600060ff821660ff811415612d3857612d38612d41565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146104b157600080fd5b80151581146104b157600080fd5b6001600160801b03811681146104b157600080fd5b61ffff811681146104b157600080fdfea26469706673582212205a1e58a5aa474d07e5d2f2b7c8c19264728048653a4d3bf5623a83d9b0103b1e64736f6c63430008040033";

type SingleDirectionOptionUpgradeableConstructorParams =
  | [
      linkLibraryAddresses: SingleDirectionOptionUpgradeableLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SingleDirectionOptionUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class SingleDirectionOptionUpgradeable__factory extends ContractFactory {
  constructor(...args: SingleDirectionOptionUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        SingleDirectionOptionUpgradeable__factory.linkBytecode(
          linkLibraryAddresses
        ),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: SingleDirectionOptionUpgradeableLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e36f5330ef2566ea8a183e1e27b10de643\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/OptionLifecycle.sol:OptionLifecycle"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SingleDirectionOptionUpgradeable> {
    return super.deploy(
      overrides || {}
    ) as Promise<SingleDirectionOptionUpgradeable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SingleDirectionOptionUpgradeable {
    return super.attach(address) as SingleDirectionOptionUpgradeable;
  }
  connect(signer: Signer): SingleDirectionOptionUpgradeable__factory {
    return super.connect(signer) as SingleDirectionOptionUpgradeable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SingleDirectionOptionUpgradeableInterface {
    return new utils.Interface(
      _abi
    ) as SingleDirectionOptionUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SingleDirectionOptionUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SingleDirectionOptionUpgradeable;
  }
}

export interface SingleDirectionOptionUpgradeableLibraryAddresses {
  ["contracts/libraries/OptionLifecycle.sol:OptionLifecycle"]: string;
}
