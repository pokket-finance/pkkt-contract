/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IPKKTStructureOption,
  IPKKTStructureOptionInterface,
} from "../IPKKTStructureOption";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint8",
        name: "optionId",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "round",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint8",
        name: "optionId",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_optionId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_assetToTerminate",
        type: "uint256",
      },
    ],
    name: "cancelWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_optionId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_optionId",
        type: "uint8",
      },
    ],
    name: "depositETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_optionId",
        type: "uint8",
      },
    ],
    name: "getAccountBalance",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "pendingDepositAssetAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "lockedDepositAssetAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "terminatingDepositAssetAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "toTerminateDepositAssetAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "releasedDepositAssetAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "releasedCounterPartyAssetAmount",
            type: "uint128",
          },
        ],
        internalType: "struct StructureData.UserBalance",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_optionId",
        type: "uint8",
      },
    ],
    name: "getOptionSnapShot",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "totalPending",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "totalLocked",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "totalTerminating",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "totalToTerminate",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "totalReleasedDeposit",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "totalReleasedCounterParty",
            type: "uint128",
          },
        ],
        internalType: "struct StructureData.OptionSnapshot",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_optionId",
        type: "uint8",
      },
      {
        internalType: "uint16",
        name: "_round",
        type: "uint16",
      },
    ],
    name: "getOptionStateByRound",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "totalAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "totalTerminate",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "strikePrice",
            type: "uint128",
          },
          {
            internalType: "uint16",
            name: "round",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "premiumRate",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "callOrPut",
            type: "bool",
          },
        ],
        internalType: "struct StructureData.OptionState",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_optionId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_assetToTerminate",
        type: "uint256",
      },
    ],
    name: "initiateWithraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_optionId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IPKKTStructureOption__factory {
  static readonly abi = _abi;
  static createInterface(): IPKKTStructureOptionInterface {
    return new utils.Interface(_abi) as IPKKTStructureOptionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPKKTStructureOption {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IPKKTStructureOption;
  }
}
