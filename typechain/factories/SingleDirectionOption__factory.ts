/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SingleDirectionOption,
  SingleDirectionOptionInterface,
} from "../SingleDirectionOption";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_whitelistAddresses",
        type: "address[]",
      },
    ],
    name: "addToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8[]",
        name: "_vaultIds",
        type: "uint8[]",
      },
    ],
    name: "buyOptions",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_vaultId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_redeemAmount",
        type: "uint256",
      },
    ],
    name: "cancelWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collectOptionHolderValues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_vaultId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_vaultId",
        type: "uint8",
      },
    ],
    name: "depositETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "expiryLevel",
            type: "uint128",
          },
          {
            internalType: "uint8",
            name: "vaultId",
            type: "uint8",
          },
        ],
        internalType: "struct StructureData.ExpiredOptionParameters[]",
        name: "_expiryParameters",
        type: "tuple[]",
      },
    ],
    name: "expireOptions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_vaultId",
        type: "uint8",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "pending",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "redeemed",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "expiredAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "expiredQueuedRedeemAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "onGoingAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "onGoingQueuedRedeemAmount",
            type: "uint128",
          },
          {
            internalType: "uint16",
            name: "lastUpdateRound",
            type: "uint16",
          },
        ],
        internalType: "struct StructureData.UserState",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_vaultId",
        type: "uint8",
      },
    ],
    name: "getVaultState",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "totalPending",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "totalRedeemed",
            type: "uint128",
          },
          {
            internalType: "uint32",
            name: "cutOffAt",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "currentRound",
            type: "uint16",
          },
          {
            internalType: "uint128",
            name: "maxCapacity",
            type: "uint128",
          },
          {
            components: [
              {
                internalType: "uint128",
                name: "amount",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "queuedRedeemAmount",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "strike",
                type: "uint128",
              },
              {
                internalType: "uint16",
                name: "premiumRate",
                type: "uint16",
              },
              {
                internalType: "address",
                name: "buyerAddress",
                type: "address",
              },
            ],
            internalType: "struct StructureData.OptionState",
            name: "onGoing",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint128",
                name: "amount",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "queuedRedeemAmount",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "strike",
                type: "uint128",
              },
              {
                internalType: "uint16",
                name: "premiumRate",
                type: "uint16",
              },
              {
                internalType: "address",
                name: "buyerAddress",
                type: "address",
              },
            ],
            internalType: "struct StructureData.OptionState",
            name: "expired",
            type: "tuple",
          },
        ],
        internalType: "struct StructureData.VaultSnapShot",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_vaultId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_redeemAmount",
        type: "uint256",
      },
    ],
    name: "initiateWithraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "vaultId",
            type: "uint8",
          },
          {
            internalType: "uint128",
            name: "maxCapacity",
            type: "uint128",
          },
          {
            internalType: "uint8",
            name: "environment",
            type: "uint8",
          },
        ],
        internalType: "struct StructureData.KickOffOptionParameters[]",
        name: "_kickoffs",
        type: "tuple[]",
      },
    ],
    name: "kickOffOptions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "managerRoleAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optionHolderValues",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct StructureData.CollectableValue[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_delistAddresses",
        type: "address[]",
      },
    ],
    name: "removeFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "strike",
            type: "uint128",
          },
          {
            internalType: "uint16",
            name: "premiumRate",
            type: "uint16",
          },
          {
            internalType: "uint8",
            name: "vaultId",
            type: "uint8",
          },
        ],
        internalType: "struct StructureData.OnGoingOptionParameters[]",
        name: "_ongoingParameters",
        type: "tuple[]",
      },
    ],
    name: "sellOptions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "vaultDefinitions",
    outputs: [
      {
        internalType: "uint8",
        name: "vaultId",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "assetAmountDecimals",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
      {
        internalType: "bool",
        name: "callOrPut",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_vaultId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612d22806100206000396000f3fe6080604052600436106100fe5760003560e01c80637f64978311610095578063ca0502a411610064578063ca0502a41461030a578063d5da2bab1461032a578063f4d4c9d7146103c6578063f6316859146103e6578063fc9b0333146103f957600080fd5b80637f6497831461027257806396721fbf14610292578063ac4b8a64146102b2578063ad70c3c7146102ea57600080fd5b806326161ec6116100d157806326161ec6146101835780633f48991414610212578063548db174146102325780637332655b1461025257600080fd5b806306a45d3f146101035780631b35804914610139578063222f6b8314610150578063256d43d714610170575b600080fd5b34801561010f57600080fd5b5061012361011e36600461275f565b61041b565b6040516101309190612924565b60405180910390f35b34801561014557600080fd5b5061014e6104fd565b005b34801561015c57600080fd5b5061014e61016b366004612779565b61064f565b61014e61017e36600461275f565b610701565b34801561018f57600080fd5b506101a361019e36600461275f565b6108af565b6040516101309190600060e0820190506001600160801b038084511683528060208501511660208401528060408501511660408401528060608501511660608401528060808501511660808401528060a08501511660a08401525061ffff60c08401511660c083015292915050565b34801561021e57600080fd5b5061014e61022d366004612779565b610a09565b34801561023e57600080fd5b5061014e61024d36600461226e565b610b75565b34801561025e57600080fd5b5061014e61026d366004612779565b610c19565b34801561027e57600080fd5b5061014e61028d36600461226e565b610c96565b34801561029e57600080fd5b5061014e6102ad36600461249b565b610d36565b3480156102be57600080fd5b506001546102d2906001600160a01b031681565b6040516001600160a01b039091168152602001610130565b3480156102f657600080fd5b5061014e61030536600461230e565b610f90565b34801561031657600080fd5b5061014e6103253660046123c5565b61146e565b34801561033657600080fd5b5061038b61034536600461275f565b6002602052600090815260409020805460019091015460ff8083169261010081048216926001600160a01b036201000090920482169291811691600160a01b9091041685565b6040805160ff96871681529590941660208601526001600160a01b03928316938501939093521660608301521515608082015260a001610130565b3480156103d257600080fd5b5061014e6103e1366004612779565b611670565b61014e6103f4366004612565565b611831565b34801561040557600080fd5b5061040e611bcb565b6040516101309190612808565b610423612115565b600154829060ff600160a01b90910481169082161061045d5760405162461bcd60e51b8152600401610454906128b3565b60405180910390fd5b60ff83166000908152600460208190526040918290209151630aaf5c2360e21b815290810182905273__$e36f5330ef2566ea8a183e1e27b10de643$__90632abd708c906024016101e06040518083038186803b1580156104bd57600080fd5b505af41580156104d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f591906126c8565b949350505050565b3360009081526006602052604090205460ff1661052c5760405162461bcd60e51b8152600401610454906128dc565b6000541561054c5760405162461bcd60e51b815260040161045490612893565b60016000908155338152600560205260408120905b600154600160a81b900460ff168110156106475760ff81166000908152600360209081526040808320546001600160a01b031680845291859052909120548015610632576001600160a01b0382166000818152602086905260408082209190915551631a4ca37b60e21b815233600482015260248101839052604481019190915273__$e36f5330ef2566ea8a183e1e27b10de643$__906369328dec9060640160006040518083038186803b15801561061957600080fd5b505af415801561062d573d6000803e3d6000fd5b505050505b5050808061063f90612c6b565b915050610561565b505060008055565b600154829060ff600160a01b9091048116908216106106805760405162461bcd60e51b8152600401610454906128b3565b60ff8316600090815260046020819052604091829020915163f6d4a19560e01b815273__$e36f5330ef2566ea8a183e1e27b10de643$__9263f6d4a195926106cc92339188910161299f565b60006040518083038186803b1580156106e457600080fd5b505af41580156106f8573d6000803e3d6000fd5b50505050505050565b600154819060ff600160a01b9091048116908216106107325760405162461bcd60e51b8152600401610454906128b3565b600054156107525760405162461bcd60e51b815260040161045490612893565b60016000553461078d5760405162461bcd60e51b81526020600482015260066024820152652176616c756560d01b6044820152606401610454565b60ff82166000908152600260205260409020546201000090046001600160a01b031680156107e65760405162461bcd60e51b8152600401610454906020808252600490820152630428aa8960e31b604082015260600190565b60ff83166000908152600460205260409020600181015463ffffffff1661083a5760405162461bcd60e51b81526020600482015260086024820152670854dd185c9d195960c21b6044820152606401610454565b604051633f7c9c6360e21b815273__$e36f5330ef2566ea8a183e1e27b10de643$__9063fdf2718c906108759084903390349060040161299f565b60006040518083038186803b15801561088d57600080fd5b505af41580156108a1573d6000803e3d6000fd5b505060008055505050505050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152600154829060ff600160a01b9091048116908216106109195760405162461bcd60e51b8152600401610454906128b3565b60ff83166000908152600460205260409020600181015461ffff640100000000820416904263ffffffff9091161161095957610956816001612a7d565b90505b33600090815260098301602052604090819020905163a8a328e760e01b8152600481018490526024810182905261ffff8316604482015273__$e36f5330ef2566ea8a183e1e27b10de643$__9063a8a328e79060640160e06040518083038186803b1580156109c757600080fd5b505af41580156109db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ff9190612612565b9695505050505050565b600154829060ff600160a01b909104811690821610610a3a5760405162461bcd60e51b8152600401610454906128b3565b60005415610a5a5760405162461bcd60e51b815260040161045490612893565b6001600090815560ff84168152600460208190526040918290209151631d48b99160e21b815273__$e36f5330ef2566ea8a183e1e27b10de643$__92637522e64492610aaa92339188910161299f565b60006040518083038186803b158015610ac257600080fd5b505af4158015610ad6573d6000803e3d6000fd5b5050505060ff831660009081526002602052604090819020549051631a4ca37b60e21b815233600482015260248101849052620100009091046001600160a01b0316604482015273__$e36f5330ef2566ea8a183e1e27b10de643$__906369328dec9060640160006040518083038186803b158015610b5457600080fd5b505af4158015610b68573d6000803e3d6000fd5b5050600080555050505050565b6001546001600160a01b03163314610b9f5760405162461bcd60e51b815260040161045490612902565b60005b8151811015610c1557600060066000848481518110610bd157634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580610c0d81612c6b565b915050610ba2565b5050565b600154829060ff600160a01b909104811690821610610c4a5760405162461bcd60e51b8152600401610454906128b3565b60ff831660009081526004602081905260409182902091516347e5296160e01b815273__$e36f5330ef2566ea8a183e1e27b10de643$__926347e52961926106cc92339188910161299f565b6001546001600160a01b03163314610cc05760405162461bcd60e51b815260040161045490612902565b60005b8151811015610c1557600160066000848481518110610cf257634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580610d2e81612c6b565b915050610cc3565b6001546001600160a01b03163314610d605760405162461bcd60e51b815260040161045490612902565b60005b8151811015610c15576000828281518110610d8e57634e487b7160e01b600052603260045260246000fd5b602002602001015190506000816020015161ffff1611610ddb5760405162461bcd60e51b8152602060048201526008602482015267217072656d69756d60c01b6044820152606401610454565b80516001600160801b0316610e1c5760405162461bcd60e51b815260206004820152600760248201526621737472696b6560c81b6044820152606401610454565b60408181015160ff16600090815260046020819052908290209151631d319eb160e31b815290810182905273__$e36f5330ef2566ea8a183e1e27b10de643$__9063e98cf5889060240160006040518083038186803b158015610e7e57600080fd5b505af4158015610e92573d6000803e3d6000fd5b50505050600181810154640100000000900461ffff1611610ee85760405162461bcd60e51b815260206004820152601060248201526f139bc81cd95b1b1a5b99c81c9bdd5b9960821b6044820152606401610454565b600481015460028201906001600160a01b031615610f375760405162461bcd60e51b815260206004820152600c60248201526b105b1c9958591e481cdbdb1960a21b6044820152606401610454565b82516001909101805460209094015161ffff16600160801b0271ffffffffffffffffffffffffffffffffffff199094166001600160801b0390921691909117929092179091555080610f8881612c6b565b915050610d63565b6001546001600160a01b03163314610fba5760405162461bcd60e51b815260040161045490612902565b60005b8151811015610c15576000828281518110610fe857634e487b7160e01b600052603260045260246000fd5b60200260200101519050600081600001516001600160801b03161161103e5760405162461bcd60e51b815260206004820152600c60248201526b08595e1c1a5c9e53195d995b60a21b6044820152606401610454565b60208181015160ff1660009081526004918290526040908190209051631d319eb160e31b81529182018190529073__$e36f5330ef2566ea8a183e1e27b10de643$__9063e98cf5889060240160006040518083038186803b1580156110a257600080fd5b505af41580156110b6573d6000803e3d6000fd5b505050506001810154600264010000000090910461ffff161161110e5760405162461bcd60e51b815260206004820152601060248201526f139bc8195e1c1a5c9959081c9bdd5b9960821b6044820152606401610454565b6005810180546001600160801b03161580611134575060028101546001600160a01b0316155b156111415750505061145c565b60018101546001600160801b03166111855760405162461bcd60e51b815260206004820152600760248201526621737472696b6560c81b6044820152606401610454565b6020838101805160ff90811660009081526002909352604080842054925182168452832060010154620100009092046001600160a01b03169291600160a01b90041661120a57845160018401546001600160801b039182169116116111eb576000611244565b8451600184015461120591906001600160801b0316612be5565b611244565b600183015485516001600160801b0391821691161161122a576000611244565b60018301548551611244916001600160801b031690612be5565b60028401546001600160a01b0316600090815260056020526040812087516001600160801b0393841694509092611292911661128c6112856008600a612b1e565b8690611db7565b90611dcc565b905061129d81611dd8565b8086600801600060028960010160049054906101000a900461ffff166112c39190612c0d565b61ffff1681526020810191909152604001600090812080546001600160801b0319166001600160801b0393841617905588518754919261130d929181169161128c91889116611db7565b905061131881611dd8565b6001600160a01b03851660009081526020849052604090205461133c908290611e25565b6001600160a01b03861660009081526020859052604081206001600160801b03928316905560018801548854919261138f928592611389929190911690600160801b900461ffff16611e31565b90611e46565b87549091506000906113ba906001600160801b038082169161128c918691600160801b900416611db7565b89549091506000906113dd908390600160801b90046001600160801b0316611e25565b90506113e881611dd8565b89546001600160801b03908116600160801b83831602178b5560028b015460009161141e91166114188686611e46565b90611e25565b905061142981611dd8565b60029a909a0180546001600160801b0319166001600160801b03909b169a909a1790995550506000909555505050505050505b8061146681612c6b565b915050610fbd565b6001546001600160a01b031633146114985760405162461bcd60e51b815260040161045490612902565b60005b8151811015610c155760008282815181106114c657634e487b7160e01b600052603260045260246000fd5b602090810291909101810151805160ff16600090815260049092526040909120600181015491925090640100000000900461ffff161561153d5760405162461bcd60e51b815260206004820152601260248201527130b63932b0b23c9035b4b1b5b2b21037b33360711b6044820152606401610454565b6000826040015160ff16600014156115635761155c4262093a80611e25565b905061158d565b826040015160ff166001141561157f5761155c42610e10611e25565b61158a42603c611e25565b90505b63ffffffff8111156115d55760405162461bcd60e51b815260206004820152601160248201527013dd995c999b1bddc818dd5d13d999905d607a1b6044820152606401610454565b60019091018054602084015160409094015165ffff000000001960ff909116600160b01b021676ff00000000000000000000000000000000ffff00000000196001600160801b0390951666010000000000000275ffffffffffffffffffffffffffffffff0000ffffffff1990921663ffffffff909416939093171792909216176401000000001790558061166881612c6b565b91505061149b565b600154829060ff600160a01b9091048116908216106116a15760405162461bcd60e51b8152600401610454906128b3565b600054156116c15760405162461bcd60e51b815260040161045490612893565b6001600055816116fd5760405162461bcd60e51b815260206004820152600760248201526608585b5bdd5b9d60ca1b6044820152606401610454565b60ff83166000908152600260205260409020546201000090046001600160a01b0316806117525760405162461bcd60e51b815260206004820152600360248201526208aa8960eb1b6044820152606401610454565b60ff84166000908152600460205260409020600181015463ffffffff166117a65760405162461bcd60e51b8152602060048201526008602482015267085cdd185c9d195960c21b6044820152606401610454565b6117bb6001600160a01b038316333087611e52565b604051633f7c9c6360e21b815273__$e36f5330ef2566ea8a183e1e27b10de643$__9063fdf2718c906117f69084903390899060040161299f565b60006040518083038186803b15801561180e57600080fd5b505af4158015611822573d6000803e3d6000fd5b50506000805550505050505050565b3360009081526006602052604090205460ff166118605760405162461bcd60e51b8152600401610454906128dc565b600054156118805760405162461bcd60e51b815260040161045490612893565b60016000908155805b8251811015611b425760008382815181106118b457634e487b7160e01b600052603260045260246000fd5b602002602001015190506000600460008360ff1660ff168152602001908152602001600020905073__$e36f5330ef2566ea8a183e1e27b10de643$";

type SingleDirectionOptionConstructorParams =
  | [
      linkLibraryAddresses: SingleDirectionOptionLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SingleDirectionOptionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class SingleDirectionOption__factory extends ContractFactory {
  constructor(...args: SingleDirectionOptionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        SingleDirectionOption__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: SingleDirectionOptionLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e36f5330ef2566ea8a183e1e27b10de643\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/OptionLifecycle.sol:OptionLifecycle"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SingleDirectionOption> {
    return super.deploy(overrides || {}) as Promise<SingleDirectionOption>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SingleDirectionOption {
    return super.attach(address) as SingleDirectionOption;
  }
  connect(signer: Signer): SingleDirectionOption__factory {
    return super.connect(signer) as SingleDirectionOption__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SingleDirectionOptionInterface {
    return new utils.Interface(_abi) as SingleDirectionOptionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SingleDirectionOption {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SingleDirectionOption;
  }
}

export interface SingleDirectionOptionLibraryAddresses {
  ["contracts/libraries/OptionLifecycle.sol:OptionLifecycle"]: string;
}
