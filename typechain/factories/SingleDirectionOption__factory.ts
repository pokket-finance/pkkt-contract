/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SingleDirectionOption,
  SingleDirectionOptionInterface,
} from "../SingleDirectionOption";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8[]",
        name: "_vaultIds",
        type: "uint8[]",
      },
    ],
    name: "buyOptions",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_vaultId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_redeemAmount",
        type: "uint256",
      },
    ],
    name: "cancelWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collectOptionHolderValues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_vaultId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_vaultId",
        type: "uint8",
      },
    ],
    name: "depositETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "expiryLevel",
            type: "uint128",
          },
          {
            internalType: "uint8",
            name: "vaultId",
            type: "uint8",
          },
        ],
        internalType: "struct StructureData.ExpiredOptionParameters[]",
        name: "_expiryParameters",
        type: "tuple[]",
      },
    ],
    name: "expireOptions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_vaultId",
        type: "uint8",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "pending",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "redeemed",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "expiredAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "expiredQueuedRedeemAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "onGoingAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "onGoingQueuedRedeemAmount",
            type: "uint128",
          },
          {
            internalType: "uint16",
            name: "lastUpdateRound",
            type: "uint16",
          },
        ],
        internalType: "struct StructureData.UserState",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_vaultId",
        type: "uint8",
      },
    ],
    name: "getVaultState",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "totalPending",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "totalRedeemed",
            type: "uint128",
          },
          {
            internalType: "uint32",
            name: "cutOffAt",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "currentRound",
            type: "uint16",
          },
          {
            internalType: "uint128",
            name: "maxCapacity",
            type: "uint128",
          },
          {
            components: [
              {
                internalType: "uint128",
                name: "amount",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "queuedRedeemAmount",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "strike",
                type: "uint128",
              },
              {
                internalType: "uint16",
                name: "premiumRate",
                type: "uint16",
              },
              {
                internalType: "address",
                name: "buyerAddress",
                type: "address",
              },
            ],
            internalType: "struct StructureData.OptionState",
            name: "onGoing",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint128",
                name: "amount",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "queuedRedeemAmount",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "strike",
                type: "uint128",
              },
              {
                internalType: "uint16",
                name: "premiumRate",
                type: "uint16",
              },
              {
                internalType: "address",
                name: "buyerAddress",
                type: "address",
              },
            ],
            internalType: "struct StructureData.OptionState",
            name: "expired",
            type: "tuple",
          },
        ],
        internalType: "struct StructureData.VaultSnapShot",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_vaultId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_redeemAmount",
        type: "uint256",
      },
    ],
    name: "initiateWithraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "vaultId",
            type: "uint8",
          },
          {
            internalType: "uint128",
            name: "maxCapacity",
            type: "uint128",
          },
        ],
        internalType: "struct StructureData.KickOffOptionParameters[]",
        name: "_kickoffs",
        type: "tuple[]",
      },
    ],
    name: "kickOffOptions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "managerRoleAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "strike",
            type: "uint128",
          },
          {
            internalType: "uint16",
            name: "premiumRate",
            type: "uint16",
          },
          {
            internalType: "uint8",
            name: "vaultId",
            type: "uint8",
          },
        ],
        internalType: "struct StructureData.OnGoingOptionParameters[]",
        name: "_ongoingParameters",
        type: "tuple[]",
      },
    ],
    name: "sellOptions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "vaultDefinitions",
    outputs: [
      {
        internalType: "uint8",
        name: "vaultId",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "assetAmountDecimals",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "bool",
        name: "callOrPut",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_vaultId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612601806100206000396000f3fe6080604052600436106100dd5760003560e01c806396721fbf1161007f578063d5da2bab11610059578063d5da2bab146102a9578063eeb8839014610331578063f4d4c9d714610351578063f63168591461037157600080fd5b806396721fbf14610231578063ac4b8a6414610251578063ad70c3c71461028957600080fd5b8063256d43d7116100bb578063256d43d71461014f57806326161ec6146101625780633f489914146101f15780637332655b1461021157600080fd5b806306a45d3f146100e25780631b35804914610118578063222f6b831461012f575b600080fd5b3480156100ee57600080fd5b506101026100fd366004612114565b610384565b60405161010f9190612210565b60405180910390f35b34801561012457600080fd5b5061012d610456565b005b34801561013b57600080fd5b5061012d61014a36600461212e565b6105d2565b61012d61015d366004612114565b61067f565b34801561016e57600080fd5b5061018261017d366004612114565b610827565b60405161010f9190600060e0820190506001600160801b038084511683528060208501511660208401528060408501511660408401528060608501511660608401528060808501511660808401528060a08501511660a08401525061ffff60c08401511660c083015292915050565b3480156101fd57600080fd5b5061012d61020c36600461212e565b61097b565b34801561021d57600080fd5b5061012d61022c36600461212e565b610ae2565b34801561023d57600080fd5b5061012d61024c366004611e3f565b610b5a565b34801561025d57600080fd5b50600154610271906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b34801561029557600080fd5b5061012d6102a4366004611cbe565b610d8c565b3480156102b557600080fd5b506102fc6102c4366004612114565b60026020526000908152604090205460ff8082169161010081048216916001600160a01b036201000083041691600160b01b90041684565b6040805160ff95861681529490931660208501526001600160a01b03909116918301919091521515606082015260800161010f565b34801561033d57600080fd5b5061012d61034c366004611d87565b61124f565b34801561035d57600080fd5b5061012d61036c36600461212e565b6113a3565b61012d61037f366004611f18565b61155e565b61038c611b58565b8160ff8116158015906103ae575060015460ff600160a01b9091048116908216105b6103b757600080fd5b60ff8316600090815260036020526040908190209051630aaf5c2360e21b81526004810182905273__$e36f5330ef2566ea8a183e1e27b10de643$__90632abd708c906024016101e06040518083038186803b15801561041657600080fd5b505af415801561042a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044e919061207d565b949350505050565b3360009081526005602052604090205460ff166104a95760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b60448201526064015b60405180910390fd5b600054156104c95760405162461bcd60e51b81526004016104a0906121f0565b60016000908155338152600460205260408120905b600154600160a01b900460ff168110156105ca5760ff81166000908152600260209081526040808320546201000090046001600160a01b0316808452918590529091205480156105b5576001600160a01b0382166000818152602086905260408082209190915551631a4ca37b60e21b815233600482015260248101839052604481019190915273__$e36f5330ef2566ea8a183e1e27b10de643$__906369328dec9060640160006040518083038186803b15801561059c57600080fd5b505af41580156105b0573d6000803e3d6000fd5b505050505b505080806105c29061255c565b9150506104de565b505060008055565b8160ff8116158015906105f4575060015460ff600160a01b9091048116908216105b6105fd57600080fd5b60ff831660009081526003602052604090819020905163f6d4a19560e01b815273__$e36f5330ef2566ea8a183e1e27b10de643$__9163f6d4a1959161064a91903390879060040161228b565b60006040518083038186803b15801561066257600080fd5b505af4158015610676573d6000803e3d6000fd5b50505050505050565b8060ff8116158015906106a1575060015460ff600160a01b9091048116908216105b6106aa57600080fd5b600054156106ca5760405162461bcd60e51b81526004016104a0906121f0565b6001600055346107055760405162461bcd60e51b81526020600482015260066024820152652176616c756560d01b60448201526064016104a0565b60ff82166000908152600260205260409020546201000090046001600160a01b0316801561075e5760405162461bcd60e51b81526004016104a0906020808252600490820152630428aa8960e31b604082015260600190565b60ff83166000908152600360205260409020600181015463ffffffff166107b25760405162461bcd60e51b81526020600482015260086024820152670854dd185c9d195960c21b60448201526064016104a0565b604051633f7c9c6360e21b815273__$e36f5330ef2566ea8a183e1e27b10de643$__9063fdf2718c906107ed9084903390349060040161228b565b60006040518083038186803b15801561080557600080fd5b505af4158015610819573d6000803e3d6000fd5b505060008055505050505050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101919091528160ff811615801590610882575060015460ff600160a01b9091048116908216105b61088b57600080fd5b60ff83166000908152600360205260409020600181015461ffff640100000000820416904263ffffffff909116116108cb576108c881600161236e565b90505b33600090815260098301602052604090819020905163a8a328e760e01b8152600481018490526024810182905261ffff8316604482015273__$e36f5330ef2566ea8a183e1e27b10de643$__9063a8a328e79060640160e06040518083038186803b15801561093957600080fd5b505af415801561094d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109719190611fc6565b9695505050505050565b8160ff81161580159061099d575060015460ff600160a01b9091048116908216105b6109a657600080fd5b600054156109c65760405162461bcd60e51b81526004016104a0906121f0565b6001600090815560ff8416815260036020526040908190209051631d48b99160e21b815273__$e36f5330ef2566ea8a183e1e27b10de643$__91637522e64491610a1791903390879060040161228b565b60006040518083038186803b158015610a2f57600080fd5b505af4158015610a43573d6000803e3d6000fd5b5050505060ff831660009081526002602052604090819020549051631a4ca37b60e21b815233600482015260248101849052620100009091046001600160a01b0316604482015273__$e36f5330ef2566ea8a183e1e27b10de643$__906369328dec9060640160006040518083038186803b158015610ac157600080fd5b505af4158015610ad5573d6000803e3d6000fd5b5050600080555050505050565b8160ff811615801590610b04575060015460ff600160a01b9091048116908216105b610b0d57600080fd5b60ff83166000908152600360205260409081902090516347e5296160e01b815273__$e36f5330ef2566ea8a183e1e27b10de643$__916347e529619161064a91903390879060040161228b565b60005b8151811015610d88576000828281518110610b8857634e487b7160e01b600052603260045260246000fd5b602002602001015190506000816020015161ffff1611610bd55760405162461bcd60e51b8152602060048201526008602482015267217072656d69756d60c01b60448201526064016104a0565b80516001600160801b0316610c165760405162461bcd60e51b815260206004820152600760248201526621737472696b6560c81b60448201526064016104a0565b60408181015160ff16600090815260036020528190209051631d319eb160e31b81526004810182905273__$e36f5330ef2566ea8a183e1e27b10de643$__9063e98cf5889060240160006040518083038186803b158015610c7657600080fd5b505af4158015610c8a573d6000803e3d6000fd5b50505050600181810154640100000000900461ffff1611610ce05760405162461bcd60e51b815260206004820152601060248201526f139bc81cd95b1b1a5b99c81c9bdd5b9960821b60448201526064016104a0565b600481015460028201906001600160a01b031615610d2f5760405162461bcd60e51b815260206004820152600c60248201526b105b1c9958591e481cdbdb1960a21b60448201526064016104a0565b82516001909101805460209094015161ffff16600160801b0271ffffffffffffffffffffffffffffffffffff199094166001600160801b0390921691909117929092179091555080610d808161255c565b915050610b5d565b5050565b6001546001600160a01b03163314610dd15760405162461bcd60e51b815260206004820152600860248201526710b6b0b730b3b2b960c11b60448201526064016104a0565b60005b8151811015610d88576000828281518110610dff57634e487b7160e01b600052603260045260246000fd5b60200260200101519050600081600001516001600160801b031611610e555760405162461bcd60e51b815260206004820152600c60248201526b08595e1c1a5c9e53195d995b60a21b60448201526064016104a0565b60208181015160ff16600090815260039091526040908190209051631d319eb160e31b81526004810182905273__$e36f5330ef2566ea8a183e1e27b10de643$__9063e98cf5889060240160006040518083038186803b158015610eb857600080fd5b505af4158015610ecc573d6000803e3d6000fd5b505050506001810154600264010000000090910461ffff1611610f245760405162461bcd60e51b815260206004820152601060248201526f139bc8195e1c1a5c9959081c9bdd5b9960821b60448201526064016104a0565b6005810180546001600160801b03161580610f4a575060028101546001600160a01b0316155b15610f575750505061123d565b60018101546001600160801b0316610f9b5760405162461bcd60e51b815260206004820152600760248201526621737472696b6560c81b60448201526064016104a0565b6020838101805160ff90811660009081526002909352604080842054925182168452832054620100009092046001600160a01b03169291600160b01b90041661101d57845160018401546001600160801b03918216911611610ffe576000611057565b8451600184015461101891906001600160801b03166124d6565b611057565b600183015485516001600160801b0391821691161161103d576000611057565b60018301548551611057916001600160801b0316906124d6565b60028401546001600160a01b0316600090815260046020526040812087516001600160801b03938416945090926110a5911661109f6110986008600a61240f565b8690611847565b9061185c565b90508086600801600060028960010160049054906101000a900461ffff166110cd91906124fe565b61ffff1681526020810191909152604001600090812080546001600160801b0319166001600160801b03938416179055885187549192611117929181169161109f91889116611847565b6001600160a01b03861660009081526020859052604090205490915061113e908290611868565b6001600160a01b03861660009081526020859052604081206001600160801b03928316905560018801548854919261119192859261118b929190911690600160801b900461ffff16611874565b90611889565b87549091506000906111bc906001600160801b038082169161109f918691600160801b900416611847565b89549091506111dc908290600160801b90046001600160801b0316611868565b89546001600160801b03918216600160801b02908216178a5560028a015461120f91166112098484611889565b90611868565b60029990990180546001600160801b0319166001600160801b03909a16999099179098555050505050505050505b806112478161255c565b915050610dd4565b6001546001600160a01b031633146112945760405162461bcd60e51b815260206004820152600860248201526710b6b0b730b3b2b960c11b60448201526064016104a0565b60005b8151811015610d885760008282815181106112c257634e487b7160e01b600052603260045260246000fd5b602090810291909101810151805160ff166000908152600390925260409091206001810154919250904263ffffffff90911611156113375760405162461bcd60e51b815260206004820152601260248201527130b63932b0b23c9035b4b1b5b2b21037b33360711b60448201526064016104a0565b6113444262093a80611868565b600190910180546020909301516001600160801b031666010000000000000275ffffffffffffffffffffffffffffffff0000ffffffff1990931663ffffffff92909216919091179190911790558061139b8161255c565b915050611297565b8160ff8116158015906113c5575060015460ff600160a01b9091048116908216105b6113ce57600080fd5b600054156113ee5760405162461bcd60e51b81526004016104a0906121f0565b60016000558161142a5760405162461bcd60e51b815260206004820152600760248201526608585b5bdd5b9d60ca1b60448201526064016104a0565b60ff83166000908152600260205260409020546201000090046001600160a01b03168061147f5760405162461bcd60e51b815260206004820152600360248201526208aa8960eb1b60448201526064016104a0565b60ff84166000908152600360205260409020600181015463ffffffff166114d35760405162461bcd60e51b8152602060048201526008602482015267085cdd185c9d195960c21b60448201526064016104a0565b6114e86001600160a01b038316333087611895565b604051633f7c9c6360e21b815273__$e36f5330ef2566ea8a183e1e27b10de643$__9063fdf2718c906115239084903390899060040161228b565b60006040518083038186803b15801561153b57600080fd5b505af415801561154f573d6000803e3d6000fd5b50506000805550505050505050565b3360009081526005602052604090205460ff166115ac5760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b60448201526064016104a0565b600054156115cc5760405162461bcd60e51b81526004016104a0906121f0565b60016000908155805b82518110156117be57600083828151811061160057634e487b7160e01b600052603260045260246000fd5b60209081029190910181015160ff8116600090815260039092526040918290209151631d319eb160e31b81526004810183905290925073__$e36f5330ef2566ea8a183e1e27b10de643$";

type SingleDirectionOptionConstructorParams =
  | [
      linkLibraryAddresses: SingleDirectionOptionLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SingleDirectionOptionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class SingleDirectionOption__factory extends ContractFactory {
  constructor(...args: SingleDirectionOptionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        SingleDirectionOption__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: SingleDirectionOptionLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e36f5330ef2566ea8a183e1e27b10de643\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/OptionLifecycle.sol:OptionLifecycle"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SingleDirectionOption> {
    return super.deploy(overrides || {}) as Promise<SingleDirectionOption>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SingleDirectionOption {
    return super.attach(address) as SingleDirectionOption;
  }
  connect(signer: Signer): SingleDirectionOption__factory {
    return super.connect(signer) as SingleDirectionOption__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SingleDirectionOptionInterface {
    return new utils.Interface(_abi) as SingleDirectionOptionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SingleDirectionOption {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SingleDirectionOption;
  }
}

export interface SingleDirectionOptionLibraryAddresses {
  ["contracts/libraries/OptionLifecycle.sol:OptionLifecycle"]: string;
}
