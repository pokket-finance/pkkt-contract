/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  ISettlementAggregator,
  ISettlementAggregatorInterface,
} from "../ISettlementAggregator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "balanceEnough",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMoneyMovements",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "blockTime",
            type: "uint256",
          },
          {
            internalType: "int128",
            name: "movementAmount",
            type: "int128",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "address",
            name: "manager",
            type: "address",
          },
        ],
        internalType: "struct StructureData.MoneyMovementResult[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initiateSettlement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sendBackAssets",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_paramters",
        type: "uint256[]",
      },
    ],
    name: "setOptionParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum StructureData.OptionExecution[]",
        name: "_execution",
        type: "uint8[]",
      },
    ],
    name: "settle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_pairId",
        type: "uint8",
      },
    ],
    name: "toggleOptionPairDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAssets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ISettlementAggregator__factory {
  static readonly abi = _abi;
  static createInterface(): ISettlementAggregatorInterface {
    return new utils.Interface(_abi) as ISettlementAggregatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISettlementAggregator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ISettlementAggregator;
  }
}
